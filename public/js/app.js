// Generated by CoffeeScript 1.4.0
(function() {

  $(document).ready(function() {
    var comment_pattern, current_url, defaults, format_pattern, medium_pattern, options;
    defaults = {
      file_format: "pdf",
      comments: "exclude",
      medium: "film"
    };
    options = {};
    current_url = document.URL;
    format_pattern = /to\=(\w+)/;
    if (current_url.match(format_pattern)) {
      options.file_format = current_url.match(format_pattern)[1];
    } else {
      options.file_format = defaults.file_format;
    }
    comment_pattern = /com\=(\w+)/;
    if (current_url.match(comment_pattern)) {
      options.comments = current_url.match(comment_pattern)[1];
    } else {
      options.comments = defaults.comments;
    }
    medium_pattern = /med\=(\w+)/;
    if (current_url.match(medium_pattern)) {
      options.medium = current_url.match(medium_pattern)[1];
    } else {
      options.medium = defaults.medium;
    }
    if (options.file_format === "html") {
      $("#file_format_html").attr("checked", "yes");
    } else {
      $("#file_format_pdf").attr("checked", "yes");
    }
    if (options.comments === "include") {
      $("#comments_include").attr("checked", "yes");
    } else {
      $("#comments_exclude").attr("checked", "yes");
    }
    if (options.medium === "musical") {
      $("#medium_musical").attr("checked", "yes");
    } else if (options.medium === "tv") {
      $("#medium_tv").attr("checked", "yes");
    } else {
      $("#medium_film").attr("checked", "yes");
    }
    $("#fountain").autosize({
      append: "\n"
    });
    if (navigator.userAgent.match(/iPod|iPhone|iPad/)) {
      $("#load_button").remove();
    }
    if ($(document).width() <= 300) {
      $("button").addClass("btn-mini");
    } else if ($(document).width() <= 480) {
      $("button").addClass("btn-small");
    }
    $(window).resize(function() {
      var current_width;
      current_width = $(window).width();
      if (current_width <= 480) {
        $("button").addClass("btn-small");
        if (current_width <= 300) {
          return $("button").addClass("btn-mini");
        }
      } else {
        $("button").removeClass("btn-small");
        return $("button").removeClass("btn-mini");
      }
    });
    $("input:radio").change(function() {
      var new_val, opt, url_str;
      opt = this.name;
      new_val = this.value;
      if (opt === "file_format") {
        options.file_format = new_val;
      } else if (opt === "comments") {
        options.comments = new_val;
      } else if (opt === "medium") {
        options.medium = new_val;
      }
      if (options.file_format === "pdf" && options.comments === "exclude" && options.medium === "film") {
        return history.pushState(options, "back to default", "/");
      } else {
        url_str = "/?";
        if (options.file_format !== "pdf") {
          url_str = "" + url_str + "to=" + options.file_format;
        }
        if (options.comments !== "exclude") {
          if (options.file_format !== "pdf") {
            url_str = "" + url_str + "&";
          }
          url_str = "" + url_str + "com=" + options.comments;
        }
        if (options.medium !== "film") {
          if (options.file_format !== "pdf" || options.comments !== "exclude") {
            url_str = "" + url_str + "&";
          }
          url_str = "" + url_str + "med=" + options.medium;
        }
        return history.pushState(options, "updated options", url_str);
      }
    });
    $("#smash").click(function() {
      return $("#screenplay_form").submit();
    });
    $("#screenplay_form").submit(function() {
      alert("Form submission is disabled until it works better.");
      return false;
    });
    return $.get('/fountain/demo.txt', function(demo) {
      $("#demo").click(function() {
        var current_text, insert_demo;
        insert_demo = function() {
          return $("#fountain").val(demo).trigger('autosize');
        };
        current_text = $("#fountain").val();
        if (current_text === "" || current_text === demo) {
          return insert_demo();
        } else {
          if (confirm("This will replace the current text.")) {
            return insert_demo();
          }
        }
      });
      $("#clear").click(function() {
        var clear_all, current_text;
        clear_all = function() {
          $("#fountain").val("").trigger('autosize');
          return $("#specify_filename").val("");
        };
        current_text = $("#fountain").val();
        if (current_text === "" || current_text === demo) {
          return clear_all();
        } else {
          if (confirm("You sure?")) {
            return clear_all();
          }
        }
      });
      $("#load_button").click(function() {
        return $("#load").click();
      });
      return $("#load").on("change", function() {
        var name, pattern, reader, selected_file;
        selected_file = $("#load").get(0).files[0];
        name = selected_file.name;
        pattern = /(\.fountain$)|(\.fou$)|(\.txt$)|(\.spmd$)|(\.md$)|(\.markdown$)/;
        reader = new FileReader();
        reader.onload = function(event) {
          var current_text, load_new_file, new_text;
          current_text = $("#fountain").val();
          new_text = event.target.result;
          load_new_file = function(new_text, name) {
            $("#fountain").val(new_text).trigger('autosize');
            return $("#specify_filename").val(name.replace(/\..+$/, ""));
          };
          if (new_text === current_text || current_text === "" || current_text === demo) {
            return load_new_file(new_text, name);
          } else {
            if (confirm("This will replace the current text.")) {
              return load_new_file(new_text, name);
            }
          }
        };
        if (name.match(pattern)) {
          reader.readAsText(selected_file);
        } else {
          alert("Bad file extension. Please use .fountain");
        }
        return $("#load").val("");
      });
    });
  });

}).call(this);
