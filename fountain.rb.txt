=begin

Screenplays can be in any of three formats that are useful to screenwriters:

1. pdf
2. fdx
3. fountain

This script will / should convert from and to any of these, using "tokens" as a generic intermediary data structure

* fountain to tokens -- not yet done
* fdx to tokens -- not yet done
* pdf to tokens -- not yet done
* tokens to pdf -- not yet done
* tokens to fdx -- not yet done
* tokens to fountain -- not yet done

I confess I'm principally interested in doing the fountain to tokens, and tokens to pdf ones.

-- Max Jacobson, 2012-11-18

=end

require 'prawn'
require_relative 'fountain_to_tokens_and_metadata'
require_relative 'tokens_to_pdf'

def fountain_to_tokens (fountain)
  return fountain
end

def html_to_tokens (html)
  tokens = html
  # ...
  return tokens
end

def fdx_to_tokens (fdx)
  tokens = fdx
  # ...
  return tokens
end

def pdf_to_tokens (pdf)
  tokens = pdf
  # ...
  return tokens
end

#####################

def tokens_to_pdf (tokens)
  pdf = tokens
  # ...
  return pdf
end

def tokens_to_html (tokens)
  html = tokens
  # ...
  return html
end

def tokens_to_fdx (tokens)
  fdx = tokens
  # ...
  return fdx
end

###########################

def fountain_to_pdf (fountain)
  # tokens = fountain_to_tokens(fountain)
  # metadata = get_metadata_from_tokens(tokens)
  # pdf = tokens_to_pdf(tokens)
  # return { :metadata => metadata, :pdf => pdf }  
  # metadata = { :title => "My Great Screenplay", :author => "My Great Name", :there_is_a_title_page => false}
  # 
  # pdf = Prawn::Document.new(:info => { :Title => metadata[:title], :Author => metadata[:author], :Creator => "smashcutapp.com"})
  # pdf.font("Courier", :size => 12)
  # 
  # pdf.text(fountain)
  # 
  # page_num_string = "<page>."
  # page_num_options = {
  #   :at => [390, 740], # aka the top right. it isn't exactly perfectly positioned. I wonder how it handles several-digit numbers
  #   :width => 150,
  #   :align => :right,
  #   :start_count_at => 2
  # }
  # if metadata[:there_is_a_title_page] == true
  #   page_num_options[:page_filter] = lambda{ |pg| pg > 2}
  # else
  #   page_num_options[:page_filter] = lambda{ |pg| pg > 1}
  # end
  # pdf.number_pages page_num_string, page_num_options
  # 
  # return { :title => metadata[:title], :pdf => pdf }
end
